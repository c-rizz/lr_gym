<launch>

    <!-- Launches gazebo with the a Panda arm controlled via joint efforts
         all the nodes necessary to control and monitor the cartpole
         via ROS.
    -->
    <env name="ROSCONSOLE_FORMAT" value="[${severity}] [${walltime}] [${node}]: ${message}" />

    <arg name="gui" default="true"/>
    <arg name="noplugin" default="false"/>
    <arg name="start_controllers" default="true"/>
    <arg name="load_gripper" default="true"/>
    <arg name="robot_name" default="panda"/>
    <arg name="control_mode" default="effort"/>
    <arg name="simulated" default="true"/>
    <arg name="physics_engine" default="bullet"/>


    <remap from="robot_description" to="$(arg robot_name)_description"/>
    
    <!-- Launch gazebo -->
    <include file="$(find gazebo_gym)/launch/gazebo_server.launch" if="$(arg simulated)" >
      <arg name="gui" value="$(arg gui)"/>
      <arg name="paused" value="false"/>
      <arg name="physics_engine" value="$(arg physics_engine)"/>
      <arg name="limit_sim_speed" default="true"/>
      <arg name="world_name" value="$(find gazebo_gym)/launch/ground_plane_mu05.world"/>
    </include>

    <!-- Spawn and setup the panda robot -->
    <include file="$(find lr_panda)/launch/panda_generic.launch" if="$(arg simulated)" >
      <arg name="simulated" value="true"/>
      <arg name="launch_gazebo" value="false"/>
      <arg name="start_controllers" value="$(arg start_controllers)"/>
      <arg name="load_gripper" value="$(arg load_gripper)"/>
      <arg name="control_mode" value="$(arg control_mode)"/>
      <arg name="robot_name" value="$(arg robot_name)"/>
    </include>

    <!-- publish the links states
    <node name="link_state_publisher" pkg="gazebo_gym_utils" type="link_state_publisher" />
-->
    <!-- load the gravity-compensated effort controller -->
    <rosparam file="$(find gazebo_gym_utils)/config/ros_controllers.yaml" command="load" />
    <node name="controller_spawner_compensated" pkg="controller_manager" type="spawner" respawn="false" output="screen"
          args="--stopped panda_arm_effort_effort_compensated_controller" />


    <!-- load the LinkstatePublisher controller -->
    <node name="controller_spawner_link_state_pub" pkg="controller_manager" type="spawner" respawn="false" output="screen"
          args=" link_state_controller" />

</launch>
